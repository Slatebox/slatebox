# This section will create a secret in the Kubernetes cluster.
# We need this for private docker repos.
apiVersion: v1
kind: Secret
metadata:
  name: slateboxcreds
data:
  .dockerconfigjson: DOCKER_CONFIG
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Secret
metadata:
  name: test-slateboxenvs
data:
  ROOT_URL: TEST_ROOT_URL_SECRET
  MONGO_URL: TEST_MONGO_URL_SECRET
  MONGO_OPLOG_URL: TEST_MONGO_OPLOG_URL_SECRET
  PORT: TEST_PORT_SECRET
  METEOR_SETTINGS: TEST_METEOR_SETTINGS_SECRET
---
# This section will create a deployment in the Kubernetes cluster
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slatebox-test
  labels:
    app: slatebox-test
spec:
  selector:
    matchLabels:
      app: slatebox-test
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: slatebox-test
    spec:
      containers:
      - env:
        - name: ROOT_URL
          valueFrom:
            secretKeyRef:
              key: TEST_ROOT_URL
              name: test-slateboxenvs
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              key: TEST_MONGO_URL
              name: test-slateboxenvs
        - name: MONGO_OPLOG_URL
          valueFrom:
            secretKeyRef:
              key: TEST_MONGO_OPLOG_URL
              name: test-slateboxenvs
        - name: PORT
          valueFrom:
            secretKeyRef:
              key: TEST_PORT
              name: test-slateboxenvs
        - name: METEOR_SETTINGS
          valueFrom:
            secretKeyRef:
              key: TEST_METEOR_SETTINGS
              name: test-slateboxenvs
        image: timheckel/slatebox-test:latest
        imagePullPolicy: Always
        name: slatebox-test
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 1Gi
      imagePullSecrets:
      - name: slateboxcreds
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: slatebox-test-ingress
spec:
  tls: 
    - hosts: 
      - test.slatebox.com
      secretName: cloudflare-slatebox-tls
  rules:
  - host: test.slatebox.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: slatebox-test-service
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: slatebox-test-service
  labels:
    app: slatebox-test-service
  annotations:
    traefik.ingress.kubernetes.io/affinity: "true"
    traefik.ingress.kubernetes.io/session-cookie-name: "sticky"
spec:
  type: ClusterIP
  selector:
    app: slatebox-test
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000