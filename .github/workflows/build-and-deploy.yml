name: Build and deploy slatebox-prod to linode k8
on:
  push:
    branches:
      - docker
  workflow_dispatch:
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      APP_ROOT_URL: ${{ secrets.APP_ROOT_URL }}
      BASE_PORT:  ${{ secrets.BASE_PORT }}
      GOOGLE_API_KEY:  ${{ secrets.GOOGLE_API_KEY }}
      GOOGLE_IMAGE_SEARCH_API_KEY: ${{ secrets.GOOGLE_IMAGE_SEARCH_API_KEY }}
      HEAP_IO_KEY: ${{ secrets.HEAP_IO_KEY }}
      MAIL_URL: ${{ secrets.MAIL_URL }}
      MONGO_OPLOG_URL: ${{ secrets.MONGO_OPLOG_URL }}
      MONGO_URL: ${{ secrets.MONGO_URL }}
      MONTI_APP_ID: ${{ secrets.MONTI_APP_ID }}
      MONTI_APP_SECRET: ${{ secrets.MONTI_APP_SECRET }}
      NOUN_PROJECT_KEY: ${{ secrets.NOUN_PROJECT_KEY }}
      NOUN_PROJECT_SECRET: ${{ secrets.NOUN_PROJECT_SECRET }}
      PIXABAY_API_KEY: ${{ secrets.PIXABAY_API_KEY }}
      SB_ENV: ${{ secrets.SB_ENV }}
      STRIPE_PRIVATE_KEY: ${{ secrets.STRIPE_PRIVATE_KEY }}
      STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: login to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Kubernetes set context
        uses: Azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
      - name: Docker Build and Push, Kubernetes apply
        run: |
          cd ./web
          docker build --tag ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ github.sha }}
          export DOCKER_CONFIG=$(cat ~/.docker/config.json | base64 -w 0)
          sed -i'' -e 's/DOCKER_HUB_USERNAME/${{ secrets.DOCKER_HUB_USERNAME }}/g' -e 's/DOCKER_HUB_REPOSITORY/${{ secrets.DOCKER_HUB_REPOSITORY }}/g' -e 's/IMAGE_LABEL/${{ github.sha }}/g' -e "s/DOCKER_CONFIG/$DOCKER_CONFIG/g" ./k8.yml
          kubectl apply -f ./k8.yml
        